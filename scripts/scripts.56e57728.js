"use strict";angular.module("yoWeatherApp",["ngAnimate","ngAria","ngCookies","ngMessages","ngResource","ngRoute","ngSanitize","ngTouch","ui.bootstrap"]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl",controllerAs:"main"}).otherwise({redirectTo:"/"})}]).config(["$sceDelegateProvider",function(a){a.resourceUrlWhitelist(["self","http://api.openweathermap.org/**","https://api.openweathermap.org/**"])}]),angular.module("yoWeatherApp").controller("MainCtrl",["$scope","$http","$timeout","geoLocationService","weatherService",function(a,b,c,d,e){a.getCurrentPosition=function(){var b=function(b){var c={lat:b.coords.latitude,lon:b.coords.longitude};localStorage.setItem("geoCoords",JSON.stringify(c)),a.getForecast(c)};"undefined"!=typeof Storage&&(localStorage.getItem("geoCoords")?a.getForecast(JSON.parse(localStorage.getItem("geoCoords"))):d.getCurrentCoords(b))},a.getForecast=function(b){var d=function(b){a.weatherInfo=null,a.forecastInfo=null,"404"==b.code||"404"==b.cod?a.hasError={message:"The location couldn't be found. Please type another search term and try again"}:a.hasError={message:"There is a storm in the servers. Please wait for few seconds before and try again"},console.log(b)},f=function(a){return e.queryWeather(a)},g=function(b){return e.queryForecastDaily(b).$promise.then(function(b){a.forecastInfo=b},d)};a.hasError=null;var h=null;h=b?{coords:"lat="+b.lat+"&lon="+b.lon}:{location:"q="+a.location},f(h).$promise.then(function(b){"200"==b.cod?(a.weatherInfo=b,c(g(h),100)):d(b)},d)},a.findLocations=function(a){return d.findCitiesByName(a)},a.setLocation=function(b){(""!=b&&b!=a.location||a.hasError)&&(a.location=b,a.getForecast())}}]),angular.module("yoWeatherApp").factory("weatherService",["$resource",function(a){var b="3a8e9dd1b81a4b5d35a2bc0566023ed7",c="//api.openweathermap.org/data/2.5/";return a(c+":path/:subPath?:location:coords",{APPID:b,mode:"json",units:"metric",lang:"en",type:"accurate"},{queryWeather:{method:"JSONP",params:{path:"weather"},isArray:!1,headers:{"x-api-key":b}},queryForecast:{method:"JSONP",params:{path:"forecast"},isArray:!1,headers:{"x-api-key":b}},queryForecastDaily:{method:"JSONP",params:{path:"forecast",subPath:"daily",cnt:7},isArray:!1,headers:{"x-api-key":b}}})}]),angular.module("yoWeatherApp").service("geoLocationService",["$http",function(a){var b="//maps.googleapis.com/maps/api/geocode/json";this.findCitiesByName=function(c){return a.get(b,{params:{address:c,language:"en",sensor:!1}}).then(function(a){return a.data.results.map(function(a){return a.formatted_address})})},this.getCurrentCoords=function(a){navigator.geolocation&&navigator.geolocation.getCurrentPosition(a)}}]),angular.module("yoWeatherApp").filter("temperature",function(){return function(a,b,c){var d,e=parseInt(a,10);if(isNaN(e))throw new Error("Input is not a number");if("F"===b)d=Math.round(9*e/5+32);else{if("C"!==b)throw new Error("Not a valid scale");d=Math.round(e)}return c?d+="Â°":d}}),angular.module("yoWeatherApp").directive("ngEnter",function(){return function(a,b,c){b.bind("keydown keypress",function(b){13===b.which&&(a.$apply(function(){a.$eval(c.ngEnter)}),b.preventDefault())})}}),angular.module("yoWeatherApp").run(["$templateCache",function(a){a.put("views/main.html",'<script type="text/ng-template" id="customPopupTemplate.html"><div class="custom-popup-wrapper"\n     ng-style="{top: position().top+\'px\', left: position().left+\'px\'}"\n     style="display: block;"\n     ng-show="isOpen() && !moveInProgress"\n     aria-hidden="{{!isOpen()}}">\n\n    <ul class="dropdown-menu" role="listbox">\n        <li ng-repeat="match in matches track by $index" ng-class="{active: isActive($index) }"\n            ng-mouseenter="selectActive($index)" ng-click="selectMatch($index)" role="option" id="{{::match.id}}">\n            <div uib-typeahead-match index="$index" match="match" query="query" template-url="templateUrl"></div>\n        </li>\n    </ul>\n  </div></script> <!-- getCurrentPosition commented due to issue with geolocation in http --> <!--div class="container-fluid typeahead-demo" ng-init="getCurrentPosition()"--> <div class="container-fluid typeahead-demo"> <h4>Find the weather forecast in...</h4> <div class="form-group form-inline"> <!--div class="form-group"--> <!-- Asynchronous results with custom popup template --> <input type="text" ng-model="customPopupSelected" placeholder="Enter a postcode, town or country" uib-typeahead="address for address in findLocations($viewValue)" typeahead-popup-template-url="customPopupTemplate.html" typeahead-focus-first="false" ng-enter="setLocation(customPopupSelected)" id="search-box" class="form-control"> <!--button ng-click="getCurrentPosition(true)" id="tracker" class="btn btn-primary" uib-tooltip="Track my location" ><span class="glyphicon glyphicon-map-marker"></span></button--> <button ng-click="setLocation(customPopupSelected)" type="submit" class="btn btn-primary">Find!</button> <!--/div--> </div> <div ng-if="hasError" class="alert alert-warning" id="error-msg"> <strong>Warning!</strong> {{hasError.message}} </div> <!-- Loading div commented due to issue with geolocation in http --> <!--div>\n    <div ng-if="!hasError && (!weatherInfo || !forecastInfo)" class="sp sp-circle"></div>\n  </div--> <div ng-if="weatherInfo && forecastInfo"> <div class="jumbotron"> <div class="info"> <span>Today {{weatherInfo.dt * 1000 | date:\'EEE dd\'}}</span> <h2>{{weatherInfo.name}}</h2> <span>{{weatherInfo.sys.country}}</span> <h1>{{weatherInfo.main.temp | temperature: \'C\' : true}}</h1> </div> <i ng-class="\'wi wi-owm-\' + weatherInfo.weather[0].id"></i> </div> <div id="daily"> <ul class="list-inline"> <li ng-repeat="day in forecastInfo.list | limitTo:5:1"> <span>{{day.dt * 1000 | date:\'EEE dd\'}}</span> <i ng-class="\'wi wi-owm-\' + day.weather[0].id"></i> <h1>{{day.temp.max | temperature: \'C\' : true}}<span class="temp-min hidden-xs">{{day.temp.min | temperature: \'C\' : true}}</span></h1> </li> </ul> </div> </div> </div>')}]);